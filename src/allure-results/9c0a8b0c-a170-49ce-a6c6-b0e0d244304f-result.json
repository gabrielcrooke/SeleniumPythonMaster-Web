{"name": "test_007", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id=\"cb1-edit\"]4 because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id=\"cb1-edit\"]4' is not a valid XPath expression.\n  (Session info: chrome=106.0.5249.119)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0040DF13+2219795]\n\tOrdinal0 [0x003A2841+1779777]\n\tOrdinal0 [0x002B423D+803389]\n\tOrdinal0 [0x002B6D04+814340]\n\tOrdinal0 [0x002B6BC2+814018]\n\tOrdinal0 [0x002B6E50+814672]\n\tOrdinal0 [0x002E2D4F+994639]\n\tOrdinal0 [0x002E31EB+995819]\n\tOrdinal0 [0x00310F52+1183570]\n\tOrdinal0 [0x002FE844+1108036]\n\tOrdinal0 [0x0030F192+1175954]\n\tOrdinal0 [0x002FE616+1107478]\n\tOrdinal0 [0x002D7F89+950153]\n\tOrdinal0 [0x002D8F56+954198]\n\tGetHandleVerifier [0x00702CB2+3040210]\n\tGetHandleVerifier [0x006F2BB4+2974420]\n\tGetHandleVerifier [0x004A6A0A+565546]\n\tGetHandleVerifier [0x004A5680+560544]\n\tOrdinal0 [0x003A9A5C+1808988]\n\tOrdinal0 [0x003AE3A8+1827752]\n\tOrdinal0 [0x003AE495+1827989]\n\tOrdinal0 [0x003B80A4+1867940]\n\tBaseThreadInitThunk [0x772BFA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77A27B5E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77A27B2E+238]", "trace": "self = <test.test_007.Test_007 testMethod=test_007>\n\n    def test_007(self):\n    \n        with allure.step(u'PASO 2: Validar elementos '):\n            # Existe\n            self.element = \"/html/body\"\n            # NoExiste\n            self.element1 = '//*[@id=\"cb1-edit\"]4'\n    \n        try:\n            wait = WebDriverWait(self.driver, 15)\n>           wait.until(EC.visibility_of_element_located((By.XPATH, self.element1)))\n\ntest_007.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:81: in until\n    value = method(self._driver)\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:125: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:855: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:428: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D4DE176560>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77A27B5E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77A27B2E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get('methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"{}.{}\".format(frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //*[@id=\"cb1-edit\"]4 because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//*[@id=\"cb1-edit\"]4' is not a valid XPath expression.\nE         (Session info: chrome=106.0.5249.119)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x0040DF13+2219795]\nE       \tOrdinal0 [0x003A2841+1779777]\nE       \tOrdinal0 [0x002B423D+803389]\nE       \tOrdinal0 [0x002B6D04+814340]\nE       \tOrdinal0 [0x002B6BC2+814018]\nE       \tOrdinal0 [0x002B6E50+814672]\nE       \tOrdinal0 [0x002E2D4F+994639]\nE       \tOrdinal0 [0x002E31EB+995819]\nE       \tOrdinal0 [0x00310F52+1183570]\nE       \tOrdinal0 [0x002FE844+1108036]\nE       \tOrdinal0 [0x0030F192+1175954]\nE       \tOrdinal0 [0x002FE616+1107478]\nE       \tOrdinal0 [0x002D7F89+950153]\nE       \tOrdinal0 [0x002D8F56+954198]\nE       \tGetHandleVerifier [0x00702CB2+3040210]\nE       \tGetHandleVerifier [0x006F2BB4+2974420]\nE       \tGetHandleVerifier [0x004A6A0A+565546]\nE       \tGetHandleVerifier [0x004A5680+560544]\nE       \tOrdinal0 [0x003A9A5C+1808988]\nE       \tOrdinal0 [0x003AE3A8+1827752]\nE       \tOrdinal0 [0x003AE495+1827989]\nE       \tOrdinal0 [0x003B80A4+1867940]\nE       \tBaseThreadInitThunk [0x772BFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77A27B5E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77A27B2E+238]\n\nC:\\python\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:243: InvalidSelectorException"}, "description": "Se requiere visitar el sitio Mercado Libre:</br>'\nDeseamos validar un elemento</br></br></br>", "steps": [{"name": "PASO 1: Ingresar a Mercado Libre", "status": "passed", "start": 1668300042093, "stop": 1668300048355}, {"name": "PASO 2: Validar elementos ", "status": "passed", "start": 1668300048355, "stop": 1668300048355}, {"name": "PASO 3: Cerrar navegador", "status": "passed", "start": 1668300048822, "stop": 1668300049538}], "start": 1668300042093, "stop": 1668300049539, "uuid": "4f143000-4351-4843-8b21-68d9fcab8dbb", "historyId": "7860703040994a4a70ab8e586a7aedda", "testCaseId": "7931a9263bb88fe7e7ef9e230c6c35f1", "fullName": "test.test_007.Test_007#test_007", "labels": [{"name": "story", "value": "016: Visitar Mercado libre y ver elementos"}, {"name": "feature", "value": "Test Prueba 2"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_007"}, {"name": "subSuite", "value": "Test_007"}, {"name": "host", "value": "DESKTOP-6LJC1I2"}, {"name": "thread", "value": "21592-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_007"}]}